// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'summaries_data.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

_$_SummariesData _$$_SummariesDataFromJson(Map<String, dynamic> json) =>
    _$_SummariesData(
      gameplayId: json['GameplayId'] as int?,
      machineId: json['MachineId'] as int?,
      cardId: json['CardId'] as int?,
      cardNumber: json['CardNumber'] as String?,
      credits: (json['Credits'] as num?)?.toDouble(),
      courtesy: (json['Courtesy'] as num?)?.toDouble(),
      bonus: (json['Bonus'] as num?)?.toDouble(),
      time: (json['Time'] as num?)?.toDouble(),
      playDate: json['PlayDate'] as String?,
      notes: json['Notes'] as String?,
      ticketCount: json['TicketCount'] as int?,
      ticketMode: json['TicketMode'] as String?,
      guid: json['Guid'] as String?,
      siteId: json['SiteId'] as int?,
      synchStatus: json['SynchStatus'] as bool?,
      cardGame: (json['CardGame'] as num?)?.toDouble(),
      cPCardBalance: (json['CPCardBalance'] as num?)?.toDouble(),
      cPCredits: (json['CPCredits'] as num?)?.toDouble(),
      cPBonus: (json['CPBonus'] as num?)?.toDouble(),
      cardGameId: (json['CardGameId'] as num?)?.toDouble(),
      payoutCost: (json['PayoutCost'] as num?)?.toDouble(),
      masterEntityId: json['MasterEntityId'] as int?,
      multiGamePlayReference: json['MultiGamePlayReference'] as String?,
      gamePriceTierInfo: json['GamePriceTierInfo'] as String?,
      gamePlayInfoDTOList: json['GamePlayInfoDTOList'] as String?,
      lastUpdatedDate: json['LastUpdatedDate'] as String?,
      lastUpdatedBy: json['LastUpdatedBy'] as String?,
      promotionId: json['PromotionId'] as int?,
      playRequestTime: json['PlayRequestTime'] as String?,
      createdBy: json['CreatedBy'] as String?,
      creationDate: json['CreationDate'] as String?,
      game: json['Game'] as String?,
      machine: json['Machine'] as String?,
      eTickets: (json['ETickets'] as num?)?.toDouble(),
      manualTickets: (json['ManualTickets'] as num?)?.toDouble(),
      ticketEaterTickets: (json['TicketEaterTickets'] as num?)?.toDouble(),
      mode: json['Mode'] as String?,
      site: json['Site'] as String?,
      taskId: json['TaskId'] as int?,
      externalSystemReference: json['ExternalSystemReference'] as String?,
      isChangedRecursive: json['IsChangedRecursive'] as bool?,
      isChanged: json['IsChanged'] as bool?,
    );

Map<String, dynamic> _$$_SummariesDataToJson(_$_SummariesData instance) =>
    <String, dynamic>{
      'GameplayId': instance.gameplayId,
      'MachineId': instance.machineId,
      'CardId': instance.cardId,
      'CardNumber': instance.cardNumber,
      'Credits': instance.credits,
      'Courtesy': instance.courtesy,
      'Bonus': instance.bonus,
      'Time': instance.time,
      'PlayDate': instance.playDate,
      'Notes': instance.notes,
      'TicketCount': instance.ticketCount,
      'TicketMode': instance.ticketMode,
      'Guid': instance.guid,
      'SiteId': instance.siteId,
      'SynchStatus': instance.synchStatus,
      'CardGame': instance.cardGame,
      'CPCardBalance': instance.cPCardBalance,
      'CPCredits': instance.cPCredits,
      'CPBonus': instance.cPBonus,
      'CardGameId': instance.cardGameId,
      'PayoutCost': instance.payoutCost,
      'MasterEntityId': instance.masterEntityId,
      'MultiGamePlayReference': instance.multiGamePlayReference,
      'GamePriceTierInfo': instance.gamePriceTierInfo,
      'GamePlayInfoDTOList': instance.gamePlayInfoDTOList,
      'LastUpdatedDate': instance.lastUpdatedDate,
      'LastUpdatedBy': instance.lastUpdatedBy,
      'PromotionId': instance.promotionId,
      'PlayRequestTime': instance.playRequestTime,
      'CreatedBy': instance.createdBy,
      'CreationDate': instance.creationDate,
      'Game': instance.game,
      'Machine': instance.machine,
      'ETickets': instance.eTickets,
      'ManualTickets': instance.manualTickets,
      'TicketEaterTickets': instance.ticketEaterTickets,
      'Mode': instance.mode,
      'Site': instance.site,
      'TaskId': instance.taskId,
      'ExternalSystemReference': instance.externalSystemReference,
      'IsChangedRecursive': instance.isChangedRecursive,
      'IsChanged': instance.isChanged,
    };
